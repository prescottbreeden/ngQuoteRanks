{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edit-author/edit-author.component.css","webpack:///./src/app/edit-author/edit-author.component.html","webpack:///./src/app/edit-author/edit-author.component.ts","webpack:///./src/app/edit-quote/edit-quote.component.css","webpack:///./src/app/edit-quote/edit-quote.component.html","webpack:///./src/app/edit-quote/edit-quote.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/quotes/quotes.component.css","webpack:///./src/app/quotes/quotes.component.html","webpack:///./src/app/quotes/quotes.component.ts","webpack:///./src/app/show-author/show-author.component.css","webpack:///./src/app/show-author/show-author.component.html","webpack:///./src/app/show-author/show-author.component.ts","webpack:///./src/app/submit-author/submit-author.component.css","webpack:///./src/app/submit-author/submit-author.component.html","webpack:///./src/app/submit-author/submit-author.component.ts","webpack:///./src/app/teapot/teapot.component.css","webpack:///./src/app/teapot/teapot.component.html","webpack:///./src/app/teapot/teapot.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { EditQuoteComponent } from './edit-quote/edit-quote.component';\nimport { ShowAuthorComponent } from './show-author/show-author.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { SubmitAuthorComponent } from './submit-author/submit-author.component';\nimport { TeapotComponent } from './teapot/teapot.component';\nimport { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { QuotesComponent } from './quotes/quotes.component';\n\nconst routes: Routes = [\n    { path: '', component: ShowAuthorComponent},\n    { path: 'authors', component: ShowAuthorComponent},\n    { path: 'authors/new', component: SubmitAuthorComponent},\n    { path: 'authors/edit/:id', component: EditAuthorComponent},\n    { path: 'authors/quotes/:id', component: QuotesComponent},\n    { path: 'authors/quotes/:id/:idx', component: EditQuoteComponent},\n    { path: '**', component: TeapotComponent}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h1>Quote Ranks</h1>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <button class=\\\"btn\\\" [routerLink]=\\\"['/authors']\\\">Show Authors</button>\\n    <button class=\\\"btn\\\" [routerLink]=\\\"['/authors/new']\\\">Add an Author</button>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n      <router-outlet></router-outlet> \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(\n    private _route: ActivatedRoute,\n    private _router: Router\n  ) {}\n\n  goHome() {\n    this._router.navigate(['/author']);\n  }\n  goSubmitAuthor() {\n    this._router.navigate(['/author/new']);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { SubmitAuthorComponent } from './submit-author/submit-author.component';\nimport { EditAuthorComponent } from './edit-author/edit-author.component';\nimport { ShowAuthorComponent } from './show-author/show-author.component';\nimport { HttpService } from './http.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { TeapotComponent } from './teapot/teapot.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuotesComponent } from './quotes/quotes.component';\nimport { EditQuoteComponent } from './edit-quote/edit-quote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SubmitAuthorComponent,\n    EditAuthorComponent,\n    ShowAuthorComponent,\n    TeapotComponent,\n    QuotesComponent,\n    EditQuoteComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".flex-this {\\n    display: flex;\\n    justify-content: space-between;\\n}\"","module.exports = \"<form class=\\\"border\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <h4>Edit author</h4>\\n        <label for=\\\"author\\\">Author Name:</label>\\n        <input \\n          required\\n          minlength=\\\"3\\\"\\n          name=\\\"author\\\"\\n          ngModel \\n          #author=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"editAuthor.name\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\">\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"author.touched && !author.valid\\\">\\n            <div *ngIf=\\\"author.errors.required\\\">Author is required</div>\\n            <div *ngIf=\\\"author.errors.minlength\\\">Author must be at least 3 characters long</div>\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">{{ errors }}</div>\\n        <button class=\\\"btn\\\" [disabled]=\\\"!author.valid\\\" (click)=\\\"editAuthorService()\\\">Edit Author</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Route, Params, Router } from '@angular/router';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-edit-author',\n  templateUrl: './edit-author.component.html',\n  styleUrls: ['./edit-author.component.css']\n})\nexport class EditAuthorComponent implements OnInit {\nauthorId = '';\neditAuthor = {\n  name: ''\n};\nerrors = '';\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      console.log(`The parent params: ${params}`);\n      this.getAuthorService(params['id']);\n      this.authorId = params['id'];\n    });\n  }\n\n  getAuthorService(id: string) {\n    this._httpService.getAuthor(id).subscribe(data => {\n        if (data['message'] === 'success') {\n          this.editAuthor = data['data'];\n        } else {\n          console.log(data);\n        }\n      });\n  }\n\n  editAuthorService(id: string) {\n    this._httpService.editAuthor(this.authorId, this.editAuthor).subscribe(data => {\n      console.log(data);\n      this._router.navigate(['/authors']);\n    });\n  }\n\n  testCall(value) {\n    console.log(value);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"border\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <h4>Edit quote</h4>\\n        <label for=\\\"author\\\">Quote:</label>\\n        <input \\n          required\\n          minlength=\\\"1\\\"\\n          name=\\\"quote\\\" \\n          ngModel\\n          #quote=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"content\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\">\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"quote.touched && !quote.valid\\\">\\n            <div *ngIf=\\\"quote.errors.required\\\">Quote is required</div>\\n            <div *ngIf=\\\"quote.errors.minlength\\\">Quote must be at least 2 characters long</div>\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">{{ errors }}</div>\\n        <button class=\\\"btn\\\" [disabled]=\\\"!quote.valid\\\" (click)=\\\"editAuthorService()\\\">Edit Quote</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","import { ActivatedRoute, Router, Params } from '@angular/router';\nimport { HttpService } from './../http.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-quote',\n  templateUrl: './edit-quote.component.html',\n  styleUrls: ['./edit-quote.component.css']\n})\nexport class EditQuoteComponent implements OnInit {\ncontent = '';\nerrors = '';\nauthorId: any;\nquoteIdx: any;\neditAuthor: any;\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n    ngOnInit() {\n      this._route.params.subscribe(params => {\n        this.authorId = params['id'];\n        this.quoteIdx = params['idx'];\n        this.getAuthorService(params['id']);\n      });\n    }\n\n    getAuthorService(id: string) {\n      this._httpService.getAuthor(id).subscribe(data => {\n          if (data['message'] === 'success') {\n            this.editAuthor = data['data'];\n            this.content = data['data']['quotes'][this.quoteIdx].content;\n          } else {\n            console.log('derp: ', data['data']);\n          }\n        });\n    }\n\n    editAuthorService(id: string) {\n      this.editAuthor.quotes[this.quoteIdx].content = this.content;\n      this._httpService.editAuthor(this.authorId, this.editAuthor).subscribe(data => {\n        console.log(data);\n        if (data['message'] !== 'error') {\n          this._router.navigate([`/authors/quotes/${this.authorId}`]);\n        } else {\n          this.errors = data['errors']['errors'][`quotes.${this.quoteIdx}.content`]['properties']['message'];\n          console.log(this.errors);\n        }\n      });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) {\n  }\n\n  getAllAuthor() {\n    return this._http.get('/api/authors');\n  }\n\n  uniqueCheck(name) {\n    return this._http.get(`/api/authors/${name}`);\n  }\n  getAuthor(id) {\n    return this._http.get(`/api/authors/${id}`);\n  }\n\n  createAuthor(newAuthor) {\n    return this._http.post('/api/authors/', newAuthor);\n  }\n\n  editAuthor(id: string, editedAuthor) {\n    return this._http.put(`/api/authors/${id}`, editedAuthor);\n  }\n\n  completeAuthor(id: string, completedAuthor) {\n    return this._http.put(`/api/authors/${id}`, completedAuthor);\n  }\n\n  deleteAuthor(id: string) {\n    return this._http.delete(`/api/authors/` + id);\n  }\n}\n","module.exports = \".all-quotes .row {\\n\\n    padding: 10px;\\n}\"","module.exports = \"<div *ngIf=\\\"!addQuote\\\">\\n<button class=\\\"btn\\\" (click)=\\\"toggleAddQuote()\\\">{{ button }}</button>\\n  <div class=\\\"card card-default\\\">\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n          <h5>Quote</h5>\\n        </div>\\n        <div class=\\\"col-1\\\">\\n          <h5>Votes</h5>\\n        </div>\\n        <div class=\\\"col-6\\\">\\n          <h5>Actions Available</h5>\\n        </div>\\n      </div>\\n      <div class=\\\"all-quotes\\\">\\n        <div *ngIf=\\\"author\\\">\\n          <div class=\\\"row\\\" *ngFor=\\\"let quote of author.quotes; let i = index\\\">\\n            <div class=\\\"col-3\\\">\\n              {{ quote.content }}\\n            </div>\\n            <div class=\\\"col-1\\\">\\n              {{ quote.votes }}\\n            </div>\\n            <div class=\\\"col-2\\\">\\n              <button class=\\\"btn btn-block\\\" (click)=\\\"voteUpService(i)\\\">Vote Up</button>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n              <button class=\\\"btn btn-block\\\" (click)=\\\"voteDownService(i)\\\">Vote Down</button>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n              <button class=\\\"btn btn-block\\\" [routerLink]=\\\"[i]\\\">Edit</button>\\n            </div>   \\n            <div class=\\\"col-2\\\">\\n              <button class=\\\"btn btn-block\\\" (click)=\\\"deleteQuoteService(i)\\\">Delete</button>\\n            </div>   \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"addQuote\\\">\\n<button class=\\\"btn\\\" (click)=\\\"toggleAddQuote()\\\">{{ button }}</button>\\n  <form class=\\\"border\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <h4>Add Quote</h4>\\n          <label for=\\\"quote\\\">Quote:</label>\\n          <input \\n            required\\n            minlength=\\\"3\\\"\\n            ngModel\\n            name=\\\"quote\\\" \\n            #quote=\\\"ngModel\\\"\\n            [(ngModel)]=\\\"content\\\"\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\">\\n            <div class=\\\"alert alert-danger\\\" *ngIf=\\\"quote.touched && !quote.valid\\\">\\n              <div *ngIf=\\\"quote.errors.required\\\">Quote cannot be blank</div>\\n              <div *ngIf=\\\"quote.errors.minlength\\\">Quote must be at least 3 characters long</div>\\n              <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">{{ errors }}</div>\\n            </div>\\n          <button class=\\\"btn\\\" [disabled]=\\\"!quote.valid\\\" (click)=\\\"addQuoteService(author._id)\\\">Add Quote</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { ActivatedRoute, Router } from '@angular/router';\nimport { HttpService } from './../http.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.component.html',\n  styleUrls: ['./quotes.component.css']\n})\nexport class QuotesComponent implements OnInit {\n  addQuote = false;\n  errors = '';\n  button = 'Add a Quote';\n  authorId: string;\n  content = '';\n  author;\n\n\n\n  constructor(\n    private _httpService: HttpService,\n    private _route: ActivatedRoute,\n    private _router: Router) { }\n\n  ngOnInit() {\n    this._route.params.subscribe(params => {\n      console.log(`The parent params: ${params}`);\n      this.authorId = params['id'];\n      this.getAuthorService(this.authorId);\n    });\n  }\n\n  toggleAddQuote() {\n    this.addQuote = !this.addQuote;\n    this.addQuote ? this.button = 'Return to Quotes' : this.button = 'Add a Quote';\n    this.getAuthorService(this.authorId);\n  }\n\n  getAuthorService(id) {\n    this._httpService.getAuthor(id).subscribe(data => {\n      console.log(data);\n      this.author = data['data'];\n    });\n  }\n\n  addQuoteService(id) {\n    console.log('clicked add quote');\n    this._httpService.editAuthor(id, {$push: {quotes: {content: this.content}}}).subscribe(data => {\n      console.log(data);\n      if (data['message'] !== 'error') {\n        this._router.navigate(['/authors']);\n      } else {\n        this.errors = data['errors']['errors']['name']['message'];\n        console.log(data['errors']['errors']['name']['message']);\n      }\n      this.toggleAddQuote();\n    });\n  }\n\n  voteUpService(id) {\n    this.author.quotes[id].votes++;\n    this._httpService.editAuthor(this.authorId, this.author).subscribe(data => {\n      console.log(data);\n    });\n  }\n  voteDownService(id) {\n    this.author.quotes[id].votes--;\n    this._httpService.editAuthor(this.authorId, this.author).subscribe(data => {\n      console.log(data);\n    });\n  }\n\n  deleteQuoteService(id) {\n    console.log('clicked delete quote');\n    console.log(this.author.quotes[id]);\n    this.author.quotes.splice(id, 1);\n    this._httpService.editAuthor(this.authorId, this.author).subscribe(data => {\n      console.log(data);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card card-default\\\">\\n  <div class=\\\"card-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-6\\\">\\n        <h5>Author Name</h5>\\n      </div>\\n      <div class=\\\"col-6\\\">\\n        <h5>Actions Available</h5>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngFor=\\\"let author of authors\\\">\\n      <div class=\\\"col-6\\\">\\n        {{ author.name }}\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <button class=\\\"btn btn-block\\\" [routerLink]=\\\"['quotes', author._id]\\\">View Quotes</button>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <button class=\\\"btn btn-block\\\" [routerLink]=\\\"['edit', author._id]\\\">Edit</button>\\n      </div>\\n      <div class=\\\"col-2\\\">\\n        <button class=\\\"btn btn-block\\\" (click)=\\\"deleteAuthorService(author._id)\\\">Delete</button>\\n      </div>   \\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-show-author',\n  templateUrl: './show-author.component.html',\n  styleUrls: ['./show-author.component.css']\n})\nexport class ShowAuthorComponent implements OnInit {\n  authors: any = [];\n\n  constructor(private _httpService: HttpService) { }\n\n  ngOnInit() {\n    this.getAllAuthorService();\n  }\n\n  getAllAuthorService() {\n    this._httpService.getAllAuthor().subscribe(data => {\n      console.log(data);\n      this.authors = data['data'];\n    });\n  }\n\n  getAuthorService(id) {\n    this._httpService.getAuthor(id).subscribe(data => {\n      console.log(data);\n    });\n  }\n\n  deleteAuthorService(id) {\n    this._httpService.deleteAuthor(id).subscribe(data => {\n      console.log(data);\n      this.getAllAuthorService();\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form class=\\\"border\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"form-group\\\">\\n        <h4>Add author</h4>\\n        <label for=\\\"author\\\">Author Name:</label>\\n        <input \\n          required\\n          minlength=\\\"3\\\"\\n          ngModel\\n          name=\\\"author\\\" \\n          #author=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"newAuthor.name\\\"\\n          type=\\\"text\\\"\\n          class=\\\"form-control\\\">\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(author.touched && !author.valid)\\\">\\n            <div *ngIf=\\\"author.errors.required\\\">Author is required</div>\\n            <div *ngIf=\\\"author.errors.minlength\\\">Author must be at least 3 characters long</div>\\n          </div>\\n          <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errors.length > 0\\\">{{ errors }}</div>\\n        <button class=\\\"btn\\\" [disabled]=\\\"!author.valid\\\" (click)=\\\"createAuthorService()\\\">Add Author</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\n\n@Component({\n  selector: 'app-submit-author',\n  templateUrl: './submit-author.component.html',\n  styleUrls: ['./submit-author.component.css']\n})\nexport class SubmitAuthorComponent {\nnewAuthor = {\n  name: ''\n};\nerrors = '';\n\n  constructor(\n    private _httpService: HttpService,\n    private _router: Router) { }\n\n  createAuthorService() {\n    this._httpService.createAuthor(this.newAuthor).subscribe(response => {\n      if (response['message'] === 'error') {\n        if (response['errors'].code === 11000) {\n          this.errors = 'Author name must be unique';\n        } else {\n          this.errors = response['errors']['errors']['name']['message'];\n        }\n      } else {\n        if (response['message'] !== 'error') {\n          this._router.navigate(['/authors']);\n        }\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>ERROR 420: You're a towel...</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teapot',\n  templateUrl: './teapot.component.html',\n  styleUrls: ['./teapot.component.css']\n})\nexport class TeapotComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}